<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="resources/js/ext-3.4.0/resources/css/ext-all.css" />
<link rel="stylesheet" type="text/css" href="resources/js/ext-3.4.0/resources/css/ux-all.css" />
<link rel="stylesheet" type="text/css" href="resources/js/ext-3.4.0/resources/css/xtheme-gray.css" />
<link rel="stylesheet" type="text/css" href="resources/css/style.css" />
<link rel="stylesheet" type="text/css" href="resources/css/silk.css" />
<link rel="stylesheet" type="text/css" href="resources/css/ext_css_patch.css" />
<script type="text/javascript" src="resources/js/ext-3.4.0/adapter/ext/ext-base.js"></script>
<script type="text/javascript" src="resources/js/ext-3.4.0/ext-all.js"></script>
<script type="text/javascript" src="module/A_sys/TabCloseMenu.js"></script>
<script type="text/javascript" src="module/A_sys/docs.js"></script>
<script type="text/javascript" src="module/A_sys/tree.js?v=20150808"></script>
<script type="text/javascript" src="resources/js/jquery-1.8.2.min.js"></script>
<script type="text/javascript" src="resources/js/Highcharts-4.1.7/highcharts.js"></script>
<script type="text/javascript" src="resources/js/Highcharts-4.1.7/modules/exporting.js"></script>
<script type="text/javascript" src="resources/js/exthightchartplus.js"></script>

<title>AD后台管理</title>
</head>
<body scroll="no">

<div id="loading-mask"></div>
<div id="loading">
    <div class="loading-indicator">
        <img src="resources/images/common/extanim32.gif" width="32" height="32" style="margin-right:8px;" align="absmiddle" />
        Loading&hellip;
    </div>
</div>

<div id="header">
    <!--<img style="margin-left: 5px" src="" alt="Ext JS API Documentation" height="50" width="210" />-->
    <div style="float:left;width:300px;"><h1 class="sys_logo_bg"><!-- 协作管理平台 --></h1></div>
    <div style="float:right; margin-top: 15px;margin-right: 10px;color: #CCC">
                    <a href="#" onclick="updateUserPassWordWin()" >欢迎</a> | 
        <a href="" style="padding:5px">退出</a> | 
        <a href="http://www.jys-media.com/" style="padding:5px" target="_black">联系我们</a>
        <input type="hidden" value="" id="userName">
        <input type="hidden" id="isVerifySuccess">
    </div>
</div>

<div id="classes"></div>

<div id="main"></div>

<div id="screem"><div id="screem2">欢迎您！</div></div>

<select id="search-options" style="display:none">
    <option>Starts with</option>
    <option>Ends with</option>
    <option>Any Match</option>
</select>










<script type="text/javascript" src="resources/js/sys/ext-fixes.js"></script>
<script type="text/javascript" src="resources/js/sys/ext-basex.js"></script>
<script type="text/javascript" src="resources/js/sys/jit.js"></script>

<script type="text/javascript">

//自定义验证密码

Ext.apply(Ext.form.VTypes,{ 
password : function(val, field) 
{ 
        if (field.initialPassField) 
{ 
            var pwd = Ext.getCmp(field.initialPassField); 
            return (val == pwd.getValue()); 
        } 
        return true; 
    }, 
    passwordText : '确认密码有误，请重新输入！' 
});


      /* Define our dependency table for ux module names */
Ext.onReady(function(){

     var ux= 'resources/js/sys/', extux = 'lib/ext-3.3+/examples/ux/';
     
     Ext.apply(
      $JIT.depends , {
      // JS source file   | source location    | Dependencies (in required load order)
        'uxvismode'   :   {path: ux }
       ,'multidom'    :   {path: ux }
       ,'uxmedia'     :   {path: ux ,          depends: [ '@uxvismode' ,'@uxmask']}
       ,'uxaudio'     :   {path: ux ,          depends: [ '@uxmedia']}
       ,'uxflash'     :   {path: ux ,          depends: [ '@uxmedia'] }
       ,'uxchart'     :   {path: ux ,          depends: [ '@uxflash' ] }
       ,'uxfusion'    :   {path: ux ,          depends: [ '@uxchart'] }
       ,'uxofc'       :   {path: ux ,          depends: [ '@uxchart'] }
       ,'uxamchart'   :   {path: ux ,          depends: [ '@uxchart'] }
       ,'uxflex'      :   {path: ux ,          depends: [ '@uxflash'] }
	   ,'audioevents' :   {path: ux }
	   ,'uxmask'      :   {path: ux }
       ,'mif'         :   {path: ux ,          depends: ['@multidom' , '@uxvismode'] }     
       ,'mifmsg'      :   {path: ux ,          depends: [ '@miframe'] }
       ,'mifdd'       :   {path: ux ,          depends: [ '@miframe'] }
       ,'miframe'     :   {virtual : true,     depends: [ '@mif'] }
      
      });
	 
	  var url = location.href.split('#')[0],
        params = url.split('?')[1] || '',
        args = Ext.urlDecode(params) || {}, 
        script = args.script || args.demo ;
       
        
      $JIT.setMethod('DOM'); //<script> tags for debugging/viewing
      Ext.ResourceLoader.debug = !!args.debug;  	
	  Ext.ResourceLoader.disableCaching = false;

      //load the demo site startup scripts
      $JIT(
           {debug: true},
           ux + 'ux-all',
           ux + 'codelife', 
		   ux + 'toolstips',
		   ux + 'shortcuts',
		   ux+'multidom',
		   //'demos/workers/gears_init',
		   ux+'uxworkers',
		   
		   
		   '@uxmedia',
		   '@uxflash',
		   
		   '@audioevents',
		   'resources/js/sys/demowin',
		   ux+'mif',
		   'module/B_mif/startup'
		  );
     
      //alert("");
      
      
      
});

var updateUserPassWordForm = new Ext.FormPanel({
    labelWidth: 75, // label settings here cascade unless overridden
    url:'updateSysUserPwd',
    frame:false,
    title: '修改密码',
    fileUpload:true,
    bodyStyle:'padding:5px 5px 5px 5px',
    width: 150,

    items: [{
        xtype:'fieldset',
        title: '修改密码',
        collapsible: true,
        autoHeight:true,
        defaults: {width: 200},
//        defaultType: 'textfield',
        items :[{
        	    xtype: 'textfield',
                fieldLabel: '当前密码',
                inputType : "password",
                allowBlank:false,
                name: 'userPwd',
                id: 'userPwd2'
                
            },{
                xtype:'textfield',
                inputType : "password",
                fieldLabel: '新口令',
                allowBlank:false,
                name: 'newPwd',
                id: 'userPwd3',
                listeners:{
                'focus':function(){
                  verifyPassword();
                }}
            },{
                inputType : 'password',
                vtype : "password",
                xtype : "textfield",
                fieldLabel: '确认口令',
                allowBlank:false,
                name: 'passwd',
                vtypeText:"两次密码不一致！", 
                initialPassField : 'userPwd3' // id of the initial         
            }
        ]
    }],

    buttons: [{
        text: '保存',
        handler: function(){
            if(updateUserPassWordForm.getForm().isValid()){
                var userName  = Ext.getDom('userName').value ;
            	updateUserPassWordForm.getForm().submit({
                    url: 'updateSysUserPwd',
                    waitMsg: '正在保存请稍等...',
                    success: function(form, action){
                    	Ext.MessageBox.alert('Success', action.result.info);
                    		updateUserPassWord.hide();
                    },
                    failure :function(fm,rp){	                    	
                    	//alert(rp.result);
                    	Ext.Msg.alert('Status', '操作异常，请联系管理员.');
                    },
                    params : {
					userName : userName
				}
                });
            }
        }
    },{
        text: '关闭',
        handler: function(){
        	//Ext.myloadMask.show();
        	//Ext.myloadMask.hide();
        	updateUserPassWordForm.getForm().reset();
        	updateUserPassWord.hide();
        }
    }]
});
var updateUserPassWord = new Ext.Window({
    width:350, height: 220,
    layout: 'fit', // explicitly set layout manager: override the default (layout:'auto')
    closeAction:'hide',
    items: [updateUserPassWordForm]
});
function updateUserPassWordWin(){
Ext.getDom('isVerifySuccess').value = "" ;
updateUserPassWordForm.getForm().reset();
updateUserPassWord.show();
}
function verifyPassword() {
    var userPwd = Ext.getCmp("userPwd2").getValue();
    var userName  = Ext.getDom('userName').value ;
    var isVerifySuccess = Ext.getDom('isVerifySuccess').value;
    if(isVerifySuccess!="sucess"){
	Ext.Ajax.request({
				url : 'verifyPassword',
				success : function(response) {
					var resultArray = Ext.util.JSON
							.decode(response.responseText);
							if("sucess"==resultArray.info)
							Ext.getCmp("isVerifySuccess").setValue("sucess");
					Ext.Msg.alert('提示', resultArray.info);
				},
				failure : function(response) {
					Ext.MessageBox.alert('提示', '数据验证失败');
				},
				params : {
					userPwd : userPwd,
					userName : userName
				}
			});
			}
	}
</script>





<script type="text/javascript">
Ext.onReady(function() {

	Ext.state.Manager.setProvider(new Ext.state.CookieProvider());
	// 使用表单提示
	Ext.QuickTips.init();
	Ext.form.Field.prototype.msgTarget = 'side';

	// 根据Cookie里面存放的CSS style来动态改变id为text的样式
	var file = Ext.state.Manager.get('style');
	Ext.util.CSS.swapStyleSheet('test', 'resources/css/' + file);
	// 定义表单
	var loginForm = new Ext.FormPanel({
		labelAlign : 'top',
		frame : true,
		monitorValid : true,// 把有formBind:true的按钮和验证绑定
		id : 'login',
		bodyStyle : 'padding:5px 5px 0',
		width : 400,
		// 定义表单元素
		// 指定容器中的元素
		items : [{
			layout : 'table', // 把整个空间划分成两列
			items : [{
						width : 180,
						html : '<img src="resources/images/House.jpg" width=170/>' // 左边列放一个logo
					}, {
						width : 180,
						layout : 'form', // 右边列再分成上下两行
						items : [{
									xtype : 'textfield',
									// 元素的名称
									name : 'userName',
									// 指定字段的标签
									fieldLabel : '帐号',
									width : 140,
									allowBlank : false,
									// 为空时提示信息
									blankText : '帐号不能为空'
								}, {
									xtype : 'textfield',
									name : 'userPwd',
									fieldLabel : '密码',
									allowBlank : false,
									width : 140,
									blankText : '密码不能为空',
									inputType : 'password'
								}]
					}]

		}],
		buttons : [{
			text : '登陆',
			formBind : true,
			type : 'submit',
			// 定义表单提交事件
			handler : function() {
				if (loginForm.form.isValid()) {// 验证合法后使用加载进度条
					Ext.MessageBox.show({
								title : '请稍等',
								msg : '正在登陆...',
								progressText : '',
								width : 300,
								progress : true,
								closable : false,
								animEl : 'loading'
							});
					// 控制进度速度
					var f = function(v) {
						return function() {
							var i = v / 11;
							Ext.MessageBox.updateProgress(i, '');
						};
					};

					for (var i = 1; i < 12; i++) {
						setTimeout(f(i), i * 150);
					}

					// 提交到服务器操作
					loginForm.form.doAction('submit', {
								url : 'loginAction',// 文件路径
								method : 'post',// 提交方法post或get
								params : '',
								// 提交成功的回调函数
								success : function(form, action) {
									if (action.result.info == 'ok') {//
										//window.location = 'main.html';
										win.close();
									} else {
										Ext.Msg.alert('登陆失败',
												action.result.info);
									}
								},
								// 提交失败的回调函数
								failure : function() {
									Ext.Msg.alert('错误', '服务器出现错误请稍后再试！');
								}
							});
				}
			}
		}, {
			text : '取消',
			handler : function() {
				loginForm.form.reset();
			}// 重置表单
		}]
	});
	// 定义窗体

	// 构建一个窗口面板容器
	win = new Ext.Window({
		// 把该面板绑定于wins这个DIV对象上
		// el : 'wins',
		// 窗口面板标题
		title : '登陆系统',
		// 窗口面板宽度
		width : 400,
		// 不容许任意伸缩大小
		resizable : false,
		// 高度
		autoHeight : true,
		// 该面板布局类型
		layout : 'column',
		// 面板是否可以关闭及打开
		collapsible : true,
		// 窗体拖拽 默认是TRUE
		draggable : false,
		shadow : true, 
		modal : true, 
		defaults : {
			// 容器内元素是否显示边框
			border : false
		},
		items : {
			// 指定内部元素所占宽度1表示100% .5表示50%
			columnWidth : 1,
			// 把表单面板容器增加入其中,使之成为窗口面板容器的子容器
			items : loginForm
		}
			// // 面板中按钮的排列方式
			// buttonAlign : 'center',
			// // 面板底部的一个或多个按钮对象
			// buttons : [ {
			// // 按钮上需显示的文本
			// text : '登陆',
			// // 单击按钮时响应的动作
			// handler : login
			// }, {
			// text : '重置',
			// handler : reset
			// }]
		});

	win.show();// 显示窗体

});
// 点击更换验证码
function changeImg(obj) {

	obj.src = "user.action" + "?t=" + Math.random();
}
</script>

</body>
</html>