<script type="text/javascript">
 /**
  * @module name 管理
  * @module desc 用户的添加和删除
  * @author  wxl
  * @create  date 20151227
  * @modify  man ***
  * @modify  date ***
  */
  Ext.namespace('OrgMng', 'OrgMng.OrgObj');


 //create application
 OrgMng.OrgObj = function() {
   // do NOT access DOM from here; elements don't exist yet

   //此处定义私有属性变量
   //var dragZone1, dragZone2;

   //此处定义私有方法

   //共有区
   return {
       //此处定义共有属性变量
       

       //共有方法
       init: function() {
     	  
           //定义一些初始化行为
    	   //获取id为"docs-文章管理"的面板
    	    var aimobj = Ext.mainScreem.findById('docs-机构');
    	    var lyobj = new Ext.layout.BorderLayout();//创建面板布局对象
    	    aimobj.setLayout(lyobj);//应用布局对象
    	    //aimobj.add(OrgMng.OrgObj.catalogTree);//添加目录树面板
    	    aimobj.add(OrgMng.OrgObj.mygrid);//添加列表面板
    	    aimobj.doLayout();//展示页面
    	    
    	    //加载列表数据
    	    OrgMng.OrgObj.store.load();
       }
   };
 }(); // end of app 
 
/**
 * 创建目录树对象
 */
 OrgMng.OrgObj.catalogTree = new Ext.tree.TreePanel({
	    //renderTo: 'tree-div',
	    title:'目录树',
	    useArrows: true,
	    autoScroll: true,
	    animate: true,
	    region: 'west',
	    //enableDD: true,
	    containerScroll: true,
	    width : 180,
	    border: true,
	    // auto create TreeLoader
	    loader: new Ext.tree.TreeLoader({dataUrl:'showCatalogTree'}),//请求的url地址
	    tools : [{
			id : 'refresh',
			handler : function() {
				OrgMng.OrgObj.catalogTree.root.reload()
			}
		}],
	    //dataUrl: '',
	    root: {
	        nodeType: 'async',
	        text: '目录树',
	        draggable: false,
	        id: '0000'
	    }
	});
//添加目录树节点点击事件，添加别的事件也是这种方式，以此类推
 OrgMng.OrgObj.catalogTree.on('click', function(node,e) {
		e.stopEvent();
		node.expand();
		deptid = node.attributes.id;
		OrgMng.OrgObj.store.load({
					params : {
						start : 0,
						limit : 10,
						catalogId : deptid
					}
				});
	});
 
 
 
//数据集加载对象，给grid用的
 OrgMng.OrgObj.store = new Ext.data.JsonStore({
        root: 'data',
        totalProperty: 'pageInfo.totalRowNum',
        //idProperty: 'threadid',
        remoteSort: true,
        fields: [
            'id', 'organizeName','organizeDesc', 'gmtCreate', 'gmtModify'
        ],
        url: 'sys/orgList'
    });

    //添加grid 数据加载前事件
    OrgMng.OrgObj.store.on("beforeload",function (selfstore){
    	//将form面板的查询参数  封装成  store 能接受的对象
    	var tmpCnf = Ext.urlDecode(Ext.Ajax.serializeForm(OrgMng.OrgObj.searchPanel.getForm().getEl()));
    	tmpCnf.start = 0;//从哪一条记录开始
    	tmpCnf.limit = 10;//查询条数
    	selfstore.baseParams=tmpCnf;

    });
    

    function renderTopic(value, p, record){
        return String.format(
                '{0}',
                value);
    }
    function renderLast(value, p, r){
    	//value.dateFormat('M j, Y, g:i a')
        return String.format('{0}<br/>by {1}',value , r.data['cnt_id']);
    }
    //添加用户
    function renderOrgOperation(value, p, r){
    	return String.format('<u onclick=\"doEditorCnt(\'{0}\')\" >授权用户</u>&nbsp;&nbsp;&nbsp;&nbsp;',r.data['id']);
    }
    //发布文章
    function doEditorCnt(id){
    	/*
    	var editerurl ='showEditorProductPage?productId='+id;
    	Ext.mainScreem.loadClass(editerurl,"修改产品",null);*/
    	OrgMng.OrgObj.showSelectUserWin(id);
    }
    //发布文章
    function doDelCnt(id){
    	/**/
    	Ext.Ajax.request({
    		   url: 'delProductAction?productId='+id,
    		   method:'post',
    		   success: function(response, opts) {
    			      //var obj = Ext.decode(response.responseText);
    			      //alert(response.responseText);
    			      Ext.Msg.alert('系统提示', response.responseText);
    		   },
    		   failure: function(response, opts) {
    			      Ext.Msg.alert('系统提示', '操作失败！');
    		   },
    		   params: { id: id }
    		});
    }
    
    
    //表单查询条件面板
OrgMng.OrgObj.searchPanel =new Ext.FormPanel({
     	region:"north",
     	height:35,
     	frame:false,
     	border:false,id:"AppUserSearchForm",
     	layout:"hbox",
     	layoutConfig:{padding:"5",align:"middle"},
     	defaults:{xtype:"label",border:false,margins:{top:0,right:4,bottom:4,left:4}},
     	          items:[{text:"机构编号"},{xtype:"textfield",name:"userId",value:''},
     	                 {text:"机构名称"},{xtype:"textfield",name:"userName",value:''},
     	                 {text:"创建时间:从"},{xtype:"datefield",format:"Y-m-d",name:"Q_accessionTime_D_GT"},
     	                 {text:"至"},{xtype:"datefield",format:"Y-m-d",name:"Q_accessionTime_D_LT"},
     	                 {xtype:"button",text:"查询",iconCls:"search",scope:this,handler:function (){
     	                	//OrgMng.OrgObj.store.baseParams=Ext.urlDecode(Ext.Ajax.serializeForm(searchPanel.getForm().getEl()));
     	                	//alert(Ext.Ajax.serializeForm(OrgMng.OrgObj.searchPanel.getForm().getEl()) );
     	                	OrgMng.OrgObj.store.load();
     	                   }}
     	                  ,{xtype:"button",text:"删除",scope:this,handler:function (){
							var sm = OrgMng.OrgObj.mygrid.getSelectionModel();
							var array = sm.getSelections();//records
							var idstr ="";
							for(var i =0;i < array.length;i++){
							   idstr =idstr+array[i].get('id')+",";
							}
							if(idstr.length > 0){
							   idstr = idstr.substr(0,idstr.length-1);
							}else{
							    Ext.Msg.alert('系统提示','请选择要删除的数据');
							    return false;
							}
							Ext.Msg.confirm('系统提示', '你确定删除吗？', function(btn, text){
							    if (btn == 'yes'){
							    	OrgMng.OrgObj.doDel(idstr);
							    }
							});
							}
     	        	       
     	        	       }
     	                 ]});
OrgMng.OrgObj.sm = new Ext.grid.CheckboxSelectionModel({
	listeners:{
			     rowselect :function(selectmodel,rowIndex,record) {
			     }
			}
	});
//创建一个列表面板
OrgMng.OrgObj.mygrid = new Ext.grid.GridPanel({
        //width:700,
        //height:500,
        //autoHeight: true,
        //title:'分页演示',
        tbar:[{
        	text:'添加机构',
            id:'add_product',
            iconCls:'silk-add',
            handler:function (){
            	// showAddProductPage
            	//Ext.mainScreem.loadClass('showAddProductPage','添加机构',null);
            	OrgMng.OrgObj.showWin(this.getEl());
            	//Ext.mainScreem.addNewTab( Ext.getmifObj({id:'添加机构',title:'添加产品',src:'showAddProductPageIframe'}),'添加机构');
            }
        }],
        listeners:{
            'render':function () {
            	OrgMng.OrgObj.searchPanel.render(this.tbar);
            }
        },
        store:  OrgMng.OrgObj.store,
        //renderTo: 'tree-div',
        closable:true,
        trackMouseOver:true,
        disableSelection:true,
        region : 'center',
        loadMask: true,
        sm: OrgMng.OrgObj.sm,
        // grid columns
        columns:[OrgMng.OrgObj.sm
                 ,{
            //id: 'topic', // id assigned so we can apply custom css (e.g. .x-grid-col-topic b { color:#333 })
            header: "编号",
            dataIndex: 'id',
            width: 50,
            //renderer: renderTopic,
            sortable: true
        },{
            header: "机构名称",
            dataIndex: 'organizeName',
            width: 100,
            //hidden: true,
            sortable: true
        },{
            header: "创建时间",
            dataIndex: 'gmtCreate',
            width: 100,
            //align: 'right',
            sortable: true
        }/* */,{
            header: "修改日期",
            dataIndex: 'gmtModify',
            width: 100,
            //align: 'right',
            //renderer: renderLast,
            sortable: true
        },{
        header: "操作",
        renderer: renderOrgOperation
        } ],

        // customize view config
        viewConfig: {
            forceFit:true,
            enableRowBody:false,
            showPreview:false,
            getRowClass : function(record, rowIndex, p, store){
                if(this.showPreview){
                    p.body = '<p>'+record.data.cnt_id+'</p>';
                    return 'x-grid3-row-expanded';
                }
                return 'x-grid3-row-collapsed';
            }
        },

        // paging bar on the bottom
        bbar: new Ext.PagingToolbar({
            pageSize: 10,
            store:  OrgMng.OrgObj.store,
            displayInfo: true,
            displayMsg: 'Displaying topics {0} - {1} of {2}',
            emptyMsg: "No topics to display",
            items:[
                '-', {
                pressed: false,
                enableToggle:true,
                //text: 'Show Preview',
                cls: 'x-btn-text-icon details',
                toggleHandler: function(btn, pressed){
                    //var view = mygrid.getView();
                    //view.showPreview = pressed;
                    //view.refresh();
                }
            }]
        })
    });
/*添加图片窗口*/
OrgMng.OrgObj.showWin = function(){
	if(OrgMng.OrgObj.addwindobj == null || OrgMng.OrgObj.addwindobj == undefined){
		OrgMng.OrgObj.addwindobj = new OrgMng.OrgObj.addImageWin();
	}
	OrgMng.OrgObj.addwindobj.show();
}

OrgMng.OrgObj.addImageWin = function(config){
	this.config = config;
}

OrgMng.OrgObj.addImageWin.prototype = {

		show : function(el, callback){
			if(!this.win){
				this.fsf = new Ext.FormPanel({
				    labelWidth: 75, // label settings here cascade unless overridden
				    url:'sys/addUser',
				    frame:false,
				    title: '',
				    region: 'center',
				    fileUpload:true,
				    bodyStyle:'padding:5px 5px 5px 5px',
				    width: 500,

				    items: [{
				        xtype:'fieldset',
				        title: ' ',
				        collapsible: true,
				        autoHeight:true,
				        defaults: {width: 210},
				        items :[{
				        	    xtype: 'textfield',
				                fieldLabel: '机构名称',
				                hidden:false,
				                name: 'orgName',
				                allowBlank: false,
				                value: ''
				            },{
				            	xtype: 'textfield',
				                fieldLabel: '机构描述',
				                inputType: 'orgDesc',
				                allowBlank: false,
				                name: 'userPwd'
				            }
				        ]
				    }]
				});
				
				
				var cfg = {
				    	title: '添加机构',
				    	layout: 'border',
						width: 500,
						height: 300,
						modal: true,
						closeAction: 'hide',
						border: false,
						items:[this.fsf],
						buttons: [{
							text: '确定',
							handler: this.submitForm,
							scope: this
						},{
							text: '取消',
							handler: function(){ this.win.hide(); },
							scope: this
						}],
						keys: {
							key: 27, // Esc key
							handler: function(){ this.win.hide(); },
							scope: this
						}
					};
					Ext.apply(cfg, this.config);
				    this.win = new Ext.Window(cfg);
				
			}
			this.reset();
		    this.win.show(el);
			this.callback = callback;
			this.animateTarget = el;
			
		},
		reset:function(){
			;
		},
		doCallback:function(){
			alert("");
		},
		submitForm:function(){
			if(this.fsf.getForm().isValid()){
			this.fsf.getForm().submit({
                url: 'sys/addOrg',
                waitMsg: '正在上传请稍等...',
                success: function(fp, o){
                    //msg('Success', 'Processed file "'+o.result.file+'" on the server');
                	Ext.Msg.alert('Status', '操作成功');
                	OrgMng.OrgObj.store.reload();
                },
                failure :function(fm,rp){	                    	
                	Ext.Msg.alert('Status', '操作异常，请联系管理员.');
                }
            });
			}
		}
		
}
//删除机构
OrgMng.OrgObj.doDel = function(id){
	/**/
	Ext.Ajax.request({
		   url: 'sys/delOrg',
		   method:'post',
		   success: function(response, opts) {
			      var obj = Ext.decode(response.responseText);
			      //if(obj.success == true){
			      OrgMng.OrgObj.store.reload();
			      Ext.Msg.alert('系统提示',obj.info);
			      //}
		   },
		   failure: function(response, opts) {
			   Ext.Msg.alert('系统提示', '操作失败！');
		   },
		   params: {'orgId': id }
		});
}
//选择用户，机构授权给用户窗口
OrgMng.OrgObj.showSelectUserWin = function(selectId){
    if(OrgMng.OrgObj.showSelectUserWinObj == null || OrgMng.OrgObj.showSelectUserWinObj == undefined){
		OrgMng.OrgObj.showSelectUserWinObj = new OrgMng.OrgObj.selectUserWin({selectId:selectId});
	}
	OrgMng.OrgObj.showSelectUserWinObj.show(this,null,{selectId:selectId});
}

OrgMng.OrgObj.selectUserWin = function(config){
	this.config = config;
}

OrgMng.OrgObj.selectUserWin.prototype = {
        firstGrid:null,
		show : function(el, callback,opt){
		    this.config.selectId=opt.selectId;
			if(!this.win){
			   leftGridStore = new Ext.data.JsonStore({
			        root: 'data',
			        totalProperty: 'pageInfo.totalRowNum',
			        //idProperty: 'threadid',
			        remoteSort: true,
			        fields: [
			            'id', 'userName', 'gmtCreate', 'gmtModify','email','phoneNo'
			        ],
			        url: 'sys/queryUserList'
			    });
			    
			    var firstGrid = new Ext.grid.GridPanel({
			    ddGroup : 'secondGridDDGroup',
			    stripeRows       : true,
			    enableDragDrop   : true,
			    store: leftGridStore,
			    width: 350,
		        trackMouseOver:true,
		        region : 'west',
		        loadMask: true,
		        //sm: UserMng.UserObj.sm,
		        
		        columns:[{
		            header: "编号",
		            dataIndex: 'id',
		            width: 50,
		            sortable: true
		        },{
		            header: "用户名称",
		            dataIndex: 'userName',
		            width: 100,
		            sortable: true
		        }],
		        // customize view config
		        viewConfig: {
		            forceFit:true,
		            enableRowBody:false,
		            showPreview:false,
		            getRowClass : function(record, rowIndex, p, store){
		                if(this.showPreview){
		                    p.body = '<p>'+record.data.cnt_id+'</p>';
		                    return 'x-grid3-row-expanded';
		                }
		                return 'x-grid3-row-collapsed';
		            }
		        },
		        // paging bar on the bottom
		        bbar: new Ext.PagingToolbar({
		            pageSize: 10,
		            store:  leftGridStore,
		            displayInfo: true,
		            displayMsg: 'Displaying topics {0} - {1} of {2}',
		            emptyMsg: "No topics to display",
		            items:[
		                '-', {
		                pressed: false,
		                enableToggle:true,
		                //text: 'Show Preview',
		                cls: 'x-btn-text-icon details',
		                toggleHandler: function(btn, pressed){
		                    //var view = mygrid.getView();
		                    //view.showPreview = pressed;
		                    //view.refresh();
		                }
		            }]
		        })
			    });
			    
			    this.firstGrid = firstGrid;
				//第二个grid
				var fields = [
					{name: 'name', mapping : 'id'},
					{name: 'userName', mapping : 'userName'}
				];
				var cols = [
					{ id : 'name', header: "编号", width: 160, sortable: true, dataIndex: 'id'},
					{header: "姓名", width: 150, sortable: true, dataIndex: 'userName'}
				];
				var secondGridStore = new Ext.data.JsonStore({
			        fields : fields,
					root   : 'records'
			    });
			    // create the destination Grid
			    var secondGrid = new Ext.grid.GridPanel({
				    ddGroup          : 'firstGridDDGroup',
			        store            : secondGridStore,
			        width: 300,
			        columns          : cols,
				    enableDragDrop   : true,
				    region           : 'east',
			        stripeRows       : true,
			        autoExpandColumn : 'name'
			    });
				this.secondGrid = secondGrid;
				var nav = new Ext.Panel({
		            title: '选择',
		            region: 'center',
		            split: true,
		            width: 100,
		            collapsible: false,
		            margins:'3 0 3 3',
		            cmargins:'3 3 3 3',
		            html:'<u>选择</u>'
		        });
		        
		        var myform = new Ext.FormPanel({
				    labelWidth: 75,
				    url:'sys/addUser',
				    frame:false,
				    region: 'south',
				    fileUpload:false,
				    disabled:false,
				    width: 100
				    });
				this.fsf = myform;
				
				var cfg = {
				    	title: '授权用户',
				    	layout: 'border',
						width: 800,
						height: 600,
						modal: true,
						closeAction: 'hide',
						//border: true,
						items:[firstGrid,nav,secondGrid,myform],
						buttons: [{
							text: '确定',
							handler: this.submitForm,
							scope: this
						},{
							text: '取消',
							handler: function(){ this.win.hide(); },
							scope: this
						}],
						keys: {
							key: 27, // Esc key
							handler: function(){ this.win.hide(); },
							scope: this
						}
					};
					Ext.apply(cfg, this.config);
				    this.win = new Ext.Window(cfg);
				    
			}
			this.reset();
		    this.win.show(el);
		    this.win.setTitle("授权用户给机构"+this.config.selectId);
			this.callback = callback;
			this.animateTarget = el;
			
			this.win.doLayout();
	        var secondGridDropTargetEl = this.secondGrid.getView().scroller.dom;
	        var secondGridDropTarget = new Ext.dd.DropTarget(secondGridDropTargetEl, {
	                ddGroup    : 'secondGridDDGroup',
	                notifyDrop : function(ddSource, e, data){
	                        var records =  ddSource.dragData.selections;
	                        Ext.each(records, ddSource.grid.store.remove, ddSource.grid.store);
	                        secondGrid.store.add(records);
	                        secondGrid.store.sort('name', 'ASC');
	                        return true
	                }
	        });
	        
	        // This will make sure we only drop to the  view scroller element
	        var firstGridDropTargetEl =  this.firstGrid.getView().scroller.dom;
	        var firstGridDropTarget = new Ext.dd.DropTarget(firstGridDropTargetEl, {
	                ddGroup    : 'firstGridDDGroup',
	                notifyDrop : function(ddSource, e, data){
	                        var records =  ddSource.dragData.selections;
	                        Ext.each(records, ddSource.grid.store.remove, ddSource.grid.store);
	                        firstGrid.store.add(records);
	                        firstGrid.store.sort('name', 'ASC');
	                        return true
	                }
	        });
		},
		reset:function(){
			;
		},
		doCallback:function(){
			alert("");
		},
		submitForm:function(){
		    var selectStore = this.secondGrid.getStore();
		    var idArray = new Array();
		    selectStore.each(function(record){
		      idArray.push(record.get("userName"));
		    });
		    var idstr = idArray.join(',');
		    var selectOrgId = this.config.selectId;
		    //alert(this.config.selectId);
		    //alert(idstr);
			if(this.fsf.getForm().isValid()){
			this.fsf.getForm().submit({
                url: 'sys/authoriseOrgUser?orgId='+selectOrgId+"&userId="+idstr,
                waitMsg: '正在上传请稍等...',
                success: function(fp, o){
                    //msg('Success', 'Processed file "'+o.result.file+'" on the server');
                	Ext.Msg.alert('Status', '操作成功');
                	OrgMng.OrgObj.store.reload();
                },
                failure :function(fm,rp){	                    	
                	Ext.Msg.alert('Status', '操作异常，请联系管理员.');
                }
            });
			}
		}
		
}

Ext.onReady(OrgMng.OrgObj.init, OrgMng.OrgObj);
</script>